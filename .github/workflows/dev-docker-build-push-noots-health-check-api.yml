name: DEV Health check API CI && CD
on:
  push:
    branches:
      - 'DEV'

permissions:
  id-token: write
  contents: read

jobs:

  db-health-check-migration:
    name: Health Check API Database migration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x' # Change this to your desired .NET version

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef --version 8.0.0

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore HealthCheckWEB/HealthCheckWEB.csproj

      # Run EF Core migrations
      - name: Run migrations
        run: dotnet ef database update -c ApplicationDatabaseContext -p HealthCheckWEB -s HealthCheckWEB
        env:
          HealthCheckerDatabaseConnection: ${{ secrets.DEV_HEALTH_CHECK_DB_CONNECTION }}

  # define the job to build and publish the docker image
  build-and-push-docker-image:
    needs: [db-health-check-migration]
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in the job
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xnotes/health-check
          tags: type=raw,value={{branch}}-{{sha}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./pipeline-files/health-check-api.dev.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # define the job to build and publish the docker image
  deploy-to-aca:
    needs: [build-and-push-docker-image]
    name: Deploy Health Check API to Azure container apps
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in the job
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xnotes/health-check
          tags: type=raw,value={{branch}}-{{sha}}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.DEV_WEB_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.DEV_WEB_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.DEV_WEB_AZURE_SUBSCRIPTION_ID }}
        
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ steps.meta.outputs.tags }}
          containerAppName: health-check
          resourceGroup: XNotesDev
          containerAppEnvironment: managedEnvironment-XNotesDev-9d7c
          environmentVariables: HealthCheckUIUri=secretref:health-url Azure__StorageConnection=secretref:storage-connection Redis__Connection=secretref:redis-connection Redis__Password=secretref:redis-password APIDatabaseConnection=secretref:api-database-connection HealthCheckerDatabaseConnection=secretref:health-database-connection WorkerDatabaseConnection=secretref:worker-database-connection

      - name: Build and deploy Config
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ steps.meta.outputs.tags }}
          containerAppName: health-check
          resourceGroup: XNotesDev
          yamlConfigPath: pipeline-files/dev-api.yaml
          containerAppEnvironment: managedEnvironment-XNotesDev-9d7c
          environmentVariables: HealthCheckUIUri=secretref:health-url Azure__StorageConnection=secretref:storage-connection Redis__Connection=secretref:redis-connection Redis__Password=secretref:redis-password APIDatabaseConnection=secretref:api-database-connection HealthCheckerDatabaseConnection=secretref:health-database-connection WorkerDatabaseConnection=secretref:worker-database-connection